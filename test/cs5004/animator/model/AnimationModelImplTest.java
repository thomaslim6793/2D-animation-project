package cs5004.animator.model;

import static org.junit.Assert.assertEquals;

import java.util.LinkedList;

import org.junit.Test;

/**
 * This test class tests the model class on real examples. Does not
 * test each method one by one however. 
 *
 */
public class AnimationModelImplTest {

  /**
   * Test the toString method of the model. The model is a set of linked lists,
   * and the main method is addElement. The toString prints out canvas, then each
   * shape and its corresponding motions.
   */
  @Test
  public void testToString() {
    // Test smalldemo.txt file by adding line by line.
    AnimationModel m = new AnimationModelImpl();
    m.addElement("canvas 200 70 360 360");
    m.addElement("shape R rectangle");
    m.addElement("motion R 1 200 200 50 100 255 0 0 10 200 200 50 100 255 0 0");
    m.addElement("motion R 10 200 200 50 100 255 0  0    50  300 300 50 100 255 0  0");
    m.addElement("motion R 50 300 300 50 100 255 0  0    51  300 300 50 100 255 0  0");
    m.addElement("motion R 51 300 300 50 100 255 0  0    70  300 300 25 100 255 0  0");
    m.addElement("motion R 70 300 300 25 100 255 0  0    100 200 200 25 100 255 0  0");
    m.addElement("shape C ellipse");
    m.addElement("motion C 6  440 70 120 60 0 0 255 20 440 70 120 60 0 0 255 ");
    m.addElement("motion C 20 440 70 120 60 0 0 255      50 440 250 120 60 0 0 255");
    m.addElement("motion C 50 440 250 120 60 0 0 255     70 440 370 120 60 0 170 85");
    m.addElement("motion C 70 440 370 120 60 0 170 85    80 440 370 120 60 0 255 0");
    m.addElement("motion C 80 440 370 120 60 0 255 0     100 440 370 120 60 0 255 0");
    assertEquals("canvas 200 70 360 360\n" + "shape R rectangle\n"
        + "motion R 1 200 200 50 100 255 0 0 10 200 200 50 100 255 0 0\n"
        + "motion R 10 200 200 50 100 255 0 0 50 300 300 50 100 255 0 0\n"
        + "motion R 50 300 300 50 100 255 0 0 51 300 300 50 100 255 0 0\n"
        + "motion R 51 300 300 50 100 255 0 0 70 300 300 25 100 255 0 0\n"
        + "motion R 70 300 300 25 100 255 0 0 100 200 200 25 100 255 0 0\n" + "shape C ellipse\n"
        + "motion C 6 440 70 120 60 0 0 255 20 440 70 120 60 0 0 255\n"
        + "motion C 20 440 70 120 60 0 0 255 50 440 250 120 60 0 0 255\n"
        + "motion C 50 440 250 120 60 0 0 255 70 440 370 120 60 0 170 85\n"
        + "motion C 70 440 370 120 60 0 170 85 80 440 370 120 60 0 255 0\n"
        + "motion C 80 440 370 120 60 0 255 0 100 440 370 120 60 0 255 0", m.toString());

  }

  /**
   * Test to make sure that each component of the model is correct.
   */
  @Test
  public void testParts() {
    AnimationModel m = new AnimationModelImpl();
    m.addElement("canvas 200 70 360 360");
    m.addElement("shape R rectangle");
    m.addElement("motion R 1 200 200 50 100 255 0 0 10 200 200 50 100 255 0 0");
    m.addElement("motion R 10 200 200 50 100 255 0  0    50  300 300 50 100 255 0  0");
    m.addElement("motion R 50 300 300 50 100 255 0  0    51  300 300 50 100 255 0  0");
    m.addElement("motion R 51 300 300 50 100 255 0  0    70  300 300 25 100 255 0  0");
    m.addElement("motion R 70 300 300 25 100 255 0  0    100 200 200 25 100 255 0  0");
    m.addElement("shape C ellipse");
    m.addElement("motion C 6  440 70 120 60 0 0 255 20 440 70 120 60 0 0 255 ");
    m.addElement("motion C 20 440 70 120 60 0 0 255      50 440 250 120 60 0 0 255");
    m.addElement("motion C 50 440 250 120 60 0 0 255     70 440 370 120 60 0 170 85");
    m.addElement("motion C 70 440 370 120 60 0 170 85    80 440 370 120 60 0 255 0");
    m.addElement("motion C 80 440 370 120 60 0 255 0     100 440 370 120 60 0 255 0");
    assertEquals("canvas 200 70 360 360", m.getCanvas().toString());
    assertEquals("shape R rectangle\n" + "shape C ellipse", m.shapeListToString());
    assertEquals(
        "motion R 1 200 200 50 100 255 0 0 10 200 200 50 100 255 0 0\n"
            + "motion R 10 200 200 50 100 255 0 0 50 300 300 50 100 255 0 0\n"
            + "motion R 50 300 300 50 100 255 0 0 51 300 300 50 100 255 0 0\n"
            + "motion R 51 300 300 50 100 255 0 0 70 300 300 25 100 255 0 0\n"
            + "motion R 70 300 300 25 100 255 0 0 100 200 200 25 100 255 0 0\n"
            + "motion C 6 440 70 120 60 0 0 255 20 440 70 120 60 0 0 255\n"
            + "motion C 20 440 70 120 60 0 0 255 50 440 250 120 60 0 0 255\n"
            + "motion C 50 440 250 120 60 0 0 255 70 440 370 120 60 0 170 85\n"
            + "motion C 70 440 370 120 60 0 170 85 80 440 370 120 60 0 255 0\n"
            + "motion C 80 440 370 120 60 0 255 0 100 440 370 120 60 0 255 0",
        m.motionListToString(m.getMotionList()));
  }

  @Test
  public void testSortMotion() {
    AnimationModel m = new AnimationModelImpl();
    m.addElement("canvas 200 70 360 360");
    m.addElement("shape R rectangle");
    m.addElement("motion R 1 200 200 50 100 255 0 0 10 200 200 50 100 255 0 0");
    m.addElement("motion R 10 200 200 50 100 255 0  0    50  300 300 50 100 255 0  0");
    m.addElement("motion R 50 300 300 50 100 255 0  0    51  300 300 50 100 255 0  0");
    m.addElement("motion R 51 300 300 50 100 255 0  0    70  300 300 25 100 255 0  0");
    m.addElement("motion R 70 300 300 25 100 255 0  0    100 200 200 25 100 255 0  0");
    m.addElement("shape C ellipse");
    m.addElement("motion C 6  440 70 120 60 0 0 255 20 440 70 120 60 0 0 255 ");
    m.addElement("motion C 20 440 70 120 60 0 0 255      50 440 250 120 60 0 0 255");
    m.addElement("motion C 50 440 250 120 60 0 0 255     70 440 370 120 60 0 170 85");
    m.addElement("motion C 70 440 370 120 60 0 170 85    80 440 370 120 60 0 255 0");
    m.addElement("motion C 80 440 370 120 60 0 255 0     100 440 370 120 60 0 255 0");
    assertEquals(
        "motion R 1 200 200 50 100 255 0 0 10 200 200 50 100 255 0 0\n"
            + "motion R 10 200 200 50 100 255 0 0 50 300 300 50 100 255 0 0\n"
            + "motion R 50 300 300 50 100 255 0 0 51 300 300 50 100 255 0 0\n"
            + "motion R 51 300 300 50 100 255 0 0 70 300 300 25 100 255 0 0\n"
            + "motion R 70 300 300 25 100 255 0 0 100 200 200 25 100 255 0 0\n"
            + "motion C 6 440 70 120 60 0 0 255 20 440 70 120 60 0 0 255\n"
            + "motion C 20 440 70 120 60 0 0 255 50 440 250 120 60 0 0 255\n"
            + "motion C 50 440 250 120 60 0 0 255 70 440 370 120 60 0 170 85\n"
            + "motion C 70 440 370 120 60 0 170 85 80 440 370 120 60 0 255 0\n"
            + "motion C 80 440 370 120 60 0 255 0 100 440 370 120 60 0 255 0",
        m.motionListToString(m.getMotionList()));

    LinkedList<MotionElement> sortedMotions = m.sortMotionsByTime(m.getMotionList());
    assertEquals(
        "motion R 1 200 200 50 100 255 0 0 10 200 200 50 100 255 0 0\n"
            + "motion C 6 440 70 120 60 0 0 255 20 440 70 120 60 0 0 255\n"
            + "motion R 10 200 200 50 100 255 0 0 50 300 300 50 100 255 0 0\n"
            + "motion C 20 440 70 120 60 0 0 255 50 440 250 120 60 0 0 255\n"
            + "motion R 50 300 300 50 100 255 0 0 51 300 300 50 100 255 0 0\n"
            + "motion C 50 440 250 120 60 0 0 255 70 440 370 120 60 0 170 85\n"
            + "motion R 51 300 300 50 100 255 0 0 70 300 300 25 100 255 0 0\n"
            + "motion R 70 300 300 25 100 255 0 0 100 200 200 25 100 255 0 0\n"
            + "motion C 70 440 370 120 60 0 170 85 80 440 370 120 60 0 255 0\n"
            + "motion C 80 440 370 120 60 0 255 0 100 440 370 120 60 0 255 0",
        m.motionListToString(sortedMotions));
  }

  @Test
  public void testTweenedMotionList() {
    AnimationModel m = new AnimationModelImpl();
    m.addElement("canvas 200 70 360 360");
    m.addElement("shape R rectangle");
    m.addElement("motion R 1 200 200 50 100 255 0 0 10 200 200 50 100 255 0 0");
    m.addElement("motion R 10 200 200 50 100 255 0  0    50  300 300 50 100 255 0  0");
    m.addElement("motion R 50 300 300 50 100 255 0  0    51  300 300 50 100 255 0  0");
    m.addElement("motion R 51 300 300 50 100 255 0  0    70  300 300 25 100 255 0  0");
    m.addElement("motion R 70 300 300 25 100 255 0  0    100 200 200 25 100 255 0  0");
    m.addElement("shape C ellipse");
    m.addElement("motion C 6  440 70 120 60 0 0 255 20 440 70 120 60 0 0 255 ");
    m.addElement("motion C 20 440 70 120 60 0 0 255      50 440 250 120 60 0 0 255");
    m.addElement("motion C 50 440 250 120 60 0 0 255     70 440 370 120 60 0 170 85");
    m.addElement("motion C 70 440 370 120 60 0 170 85    80 440 370 120 60 0 255 0");
    m.addElement("motion C 80 440 370 120 60 0 255 0     100 440 370 120 60 0 255 0");
    assertEquals("[motion R 1 200 200 50 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 2 200 200 50 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 3 200 200 50 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 4 200 200 50 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 5 200 200 50 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 6 200 200 50 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 7 200 200 50 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 8 200 200 50 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 9 200 200 50 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 10 200 200 50 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 10 200 200 50 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 11 203 203 50 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 12 205 205 50 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 13 208 208 50 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 14 210 210 50 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 15 213 213 50 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 16 215 215 50 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 17 218 218 50 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 18 220 220 50 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 19 223 223 50 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 20 225 225 50 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 21 228 228 50 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 22 230 230 50 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 23 233 233 50 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 24 235 235 50 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 25 238 238 50 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 26 240 240 50 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 27 243 243 50 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 28 245 245 50 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 29 248 248 50 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 30 250 250 50 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 31 253 253 50 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 32 255 255 50 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 33 258 258 50 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 34 260 260 50 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 35 263 263 50 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 36 265 265 50 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 37 268 268 50 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 38 270 270 50 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 39 273 273 50 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 40 275 275 50 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 41 278 278 50 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 42 280 280 50 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 43 283 283 50 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 44 285 285 50 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 45 288 288 50 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 46 290 290 50 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 47 293 293 50 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 48 295 295 50 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 49 298 298 50 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 50 300 300 50 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 50 300 300 50 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 51 300 300 50 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 51 300 300 50 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 52 300 300 49 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 53 300 300 47 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 54 300 300 46 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 55 300 300 45 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 56 300 300 43 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 57 300 300 42 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 58 300 300 41 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 59 300 300 39 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 60 300 300 38 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 61 300 300 37 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 62 300 300 36 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 63 300 300 34 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 64 300 300 33 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 65 300 300 32 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 66 300 300 30 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 67 300 300 29 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 68 300 300 28 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 69 300 300 26 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 70 300 300 25 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 70 300 300 25 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 71 297 297 25 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 72 293 293 25 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 73 290 290 25 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 74 287 287 25 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 75 283 283 25 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 76 280 280 25 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 77 277 277 25 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 78 273 273 25 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 79 270 270 25 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 80 267 267 25 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 81 263 263 25 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 82 260 260 25 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 83 257 257 25 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 84 253 253 25 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 85 250 250 25 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 86 247 247 25 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 87 243 243 25 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 88 240 240 25 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 89 237 237 25 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 90 233 233 25 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 91 230 230 25 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 92 227 227 25 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 93 223 223 25 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 94 220 220 25 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 95 217 217 25 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 96 213 213 25 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 97 210 210 25 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 98 207 207 25 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 99 203 203 25 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion R 100 200 200 25 100 255 0 0 -1 -1 -1 -1 -1 -1 -1 -1, motion C 6 440 70 120 60 0 0 255 -1 -1 -1 -1 -1 -1 -1 -1, motion C 7 440 70 120 60 0 0 255 -1 -1 -1 -1 -1 -1 -1 -1, motion C 8 440 70 120 60 0 0 255 -1 -1 -1 -1 -1 -1 -1 -1, motion C 9 440 70 120 60 0 0 255 -1 -1 -1 -1 -1 -1 -1 -1, motion C 10 440 70 120 60 0 0 255 -1 -1 -1 -1 -1 -1 -1 -1, motion C 11 440 70 120 60 0 0 255 -1 -1 -1 -1 -1 -1 -1 -1, motion C 12 440 70 120 60 0 0 255 -1 -1 -1 -1 -1 -1 -1 -1, motion C 13 440 70 120 60 0 0 255 -1 -1 -1 -1 -1 -1 -1 -1, motion C 14 440 70 120 60 0 0 255 -1 -1 -1 -1 -1 -1 -1 -1, motion C 15 440 70 120 60 0 0 255 -1 -1 -1 -1 -1 -1 -1 -1, motion C 16 440 70 120 60 0 0 255 -1 -1 -1 -1 -1 -1 -1 -1, motion C 17 440 70 120 60 0 0 255 -1 -1 -1 -1 -1 -1 -1 -1, motion C 18 440 70 120 60 0 0 255 -1 -1 -1 -1 -1 -1 -1 -1, motion C 19 440 70 120 60 0 0 255 -1 -1 -1 -1 -1 -1 -1 -1, motion C 20 440 70 120 60 0 0 255 -1 -1 -1 -1 -1 -1 -1 -1, motion C 20 440 70 120 60 0 0 255 -1 -1 -1 -1 -1 -1 -1 -1, motion C 21 440 76 120 60 0 0 255 -1 -1 -1 -1 -1 -1 -1 -1, motion C 22 440 82 120 60 0 0 255 -1 -1 -1 -1 -1 -1 -1 -1, motion C 23 440 88 120 60 0 0 255 -1 -1 -1 -1 -1 -1 -1 -1, motion C 24 440 94 120 60 0 0 255 -1 -1 -1 -1 -1 -1 -1 -1, motion C 25 440 100 120 60 0 0 255 -1 -1 -1 -1 -1 -1 -1 -1, motion C 26 440 106 120 60 0 0 255 -1 -1 -1 -1 -1 -1 -1 -1, motion C 27 440 112 120 60 0 0 255 -1 -1 -1 -1 -1 -1 -1 -1, motion C 28 440 118 120 60 0 0 255 -1 -1 -1 -1 -1 -1 -1 -1, motion C 29 440 124 120 60 0 0 255 -1 -1 -1 -1 -1 -1 -1 -1, motion C 30 440 130 120 60 0 0 255 -1 -1 -1 -1 -1 -1 -1 -1, motion C 31 440 136 120 60 0 0 255 -1 -1 -1 -1 -1 -1 -1 -1, motion C 32 440 142 120 60 0 0 255 -1 -1 -1 -1 -1 -1 -1 -1, motion C 33 440 148 120 60 0 0 255 -1 -1 -1 -1 -1 -1 -1 -1, motion C 34 440 154 120 60 0 0 255 -1 -1 -1 -1 -1 -1 -1 -1, motion C 35 440 160 120 60 0 0 255 -1 -1 -1 -1 -1 -1 -1 -1, motion C 36 440 166 120 60 0 0 255 -1 -1 -1 -1 -1 -1 -1 -1, motion C 37 440 172 120 60 0 0 255 -1 -1 -1 -1 -1 -1 -1 -1, motion C 38 440 178 120 60 0 0 255 -1 -1 -1 -1 -1 -1 -1 -1, motion C 39 440 184 120 60 0 0 255 -1 -1 -1 -1 -1 -1 -1 -1, motion C 40 440 190 120 60 0 0 255 -1 -1 -1 -1 -1 -1 -1 -1, motion C 41 440 196 120 60 0 0 255 -1 -1 -1 -1 -1 -1 -1 -1, motion C 42 440 202 120 60 0 0 255 -1 -1 -1 -1 -1 -1 -1 -1, motion C 43 440 208 120 60 0 0 255 -1 -1 -1 -1 -1 -1 -1 -1, motion C 44 440 214 120 60 0 0 255 -1 -1 -1 -1 -1 -1 -1 -1, motion C 45 440 220 120 60 0 0 255 -1 -1 -1 -1 -1 -1 -1 -1, motion C 46 440 226 120 60 0 0 255 -1 -1 -1 -1 -1 -1 -1 -1, motion C 47 440 232 120 60 0 0 255 -1 -1 -1 -1 -1 -1 -1 -1, motion C 48 440 238 120 60 0 0 255 -1 -1 -1 -1 -1 -1 -1 -1, motion C 49 440 244 120 60 0 0 255 -1 -1 -1 -1 -1 -1 -1 -1, motion C 50 440 250 120 60 0 0 255 -1 -1 -1 -1 -1 -1 -1 -1, motion C 50 440 250 120 60 0 0 255 -1 -1 -1 -1 -1 -1 -1 -1, motion C 51 440 256 120 60 0 9 247 -1 -1 -1 -1 -1 -1 -1 -1, motion C 52 440 262 120 60 0 17 238 -1 -1 -1 -1 -1 -1 -1 -1, motion C 53 440 268 120 60 0 26 230 -1 -1 -1 -1 -1 -1 -1 -1, motion C 54 440 274 120 60 0 34 221 -1 -1 -1 -1 -1 -1 -1 -1, motion C 55 440 280 120 60 0 43 213 -1 -1 -1 -1 -1 -1 -1 -1, motion C 56 440 286 120 60 0 51 204 -1 -1 -1 -1 -1 -1 -1 -1, motion C 57 440 292 120 60 0 59 196 -1 -1 -1 -1 -1 -1 -1 -1, motion C 58 440 298 120 60 0 68 187 -1 -1 -1 -1 -1 -1 -1 -1, motion C 59 440 304 120 60 0 77 179 -1 -1 -1 -1 -1 -1 -1 -1, motion C 60 440 310 120 60 0 85 170 -1 -1 -1 -1 -1 -1 -1 -1, motion C 61 440 316 120 60 0 94 162 -1 -1 -1 -1 -1 -1 -1 -1, motion C 62 440 322 120 60 0 102 153 -1 -1 -1 -1 -1 -1 -1 -1, motion C 63 440 328 120 60 0 111 145 -1 -1 -1 -1 -1 -1 -1 -1, motion C 64 440 334 120 60 0 119 136 -1 -1 -1 -1 -1 -1 -1 -1, motion C 65 440 340 120 60 0 128 128 -1 -1 -1 -1 -1 -1 -1 -1, motion C 66 440 346 120 60 0 136 119 -1 -1 -1 -1 -1 -1 -1 -1, motion C 67 440 352 120 60 0 145 111 -1 -1 -1 -1 -1 -1 -1 -1, motion C 68 440 358 120 60 0 153 102 -1 -1 -1 -1 -1 -1 -1 -1, motion C 69 440 364 120 60 0 162 94 -1 -1 -1 -1 -1 -1 -1 -1, motion C 70 440 370 120 60 0 170 85 -1 -1 -1 -1 -1 -1 -1 -1, motion C 70 440 370 120 60 0 170 85 -1 -1 -1 -1 -1 -1 -1 -1, motion C 71 440 370 120 60 0 179 77 -1 -1 -1 -1 -1 -1 -1 -1, motion C 72 440 370 120 60 0 187 68 -1 -1 -1 -1 -1 -1 -1 -1, motion C 73 440 370 120 60 0 196 59 -1 -1 -1 -1 -1 -1 -1 -1, motion C 74 440 370 120 60 0 204 51 -1 -1 -1 -1 -1 -1 -1 -1, motion C 75 440 370 120 60 0 213 43 -1 -1 -1 -1 -1 -1 -1 -1, motion C 76 440 370 120 60 0 221 34 -1 -1 -1 -1 -1 -1 -1 -1, motion C 77 440 370 120 60 0 230 26 -1 -1 -1 -1 -1 -1 -1 -1, motion C 78 440 370 120 60 0 238 17 -1 -1 -1 -1 -1 -1 -1 -1, motion C 79 440 370 120 60 0 247 9 -1 -1 -1 -1 -1 -1 -1 -1, motion C 80 440 370 120 60 0 255 0 -1 -1 -1 -1 -1 -1 -1 -1, motion C 80 440 370 120 60 0 255 0 -1 -1 -1 -1 -1 -1 -1 -1, motion C 81 440 370 120 60 0 255 0 -1 -1 -1 -1 -1 -1 -1 -1, motion C 82 440 370 120 60 0 255 0 -1 -1 -1 -1 -1 -1 -1 -1, motion C 83 440 370 120 60 0 255 0 -1 -1 -1 -1 -1 -1 -1 -1, motion C 84 440 370 120 60 0 255 0 -1 -1 -1 -1 -1 -1 -1 -1, motion C 85 440 370 120 60 0 255 0 -1 -1 -1 -1 -1 -1 -1 -1, motion C 86 440 370 120 60 0 255 0 -1 -1 -1 -1 -1 -1 -1 -1, motion C 87 440 370 120 60 0 255 0 -1 -1 -1 -1 -1 -1 -1 -1, motion C 88 440 370 120 60 0 255 0 -1 -1 -1 -1 -1 -1 -1 -1, motion C 89 440 370 120 60 0 255 0 -1 -1 -1 -1 -1 -1 -1 -1, motion C 90 440 370 120 60 0 255 0 -1 -1 -1 -1 -1 -1 -1 -1, motion C 91 440 370 120 60 0 255 0 -1 -1 -1 -1 -1 -1 -1 -1, motion C 92 440 370 120 60 0 255 0 -1 -1 -1 -1 -1 -1 -1 -1, motion C 93 440 370 120 60 0 255 0 -1 -1 -1 -1 -1 -1 -1 -1, motion C 94 440 370 120 60 0 255 0 -1 -1 -1 -1 -1 -1 -1 -1, motion C 95 440 370 120 60 0 255 0 -1 -1 -1 -1 -1 -1 -1 -1, motion C 96 440 370 120 60 0 255 0 -1 -1 -1 -1 -1 -1 -1 -1, motion C 97 440 370 120 60 0 255 0 -1 -1 -1 -1 -1 -1 -1 -1, motion C 98 440 370 120 60 0 255 0 -1 -1 -1 -1 -1 -1 -1 -1, motion C 99 440 370 120 60 0 255 0 -1 -1 -1 -1 -1 -1 -1 -1, motion C 100 440 370 120 60 0 255 0 -1 -1 -1 -1 -1 -1 -1 -1]", m.tweenedMotionList(m.sortMotionsByTime(m.getMotionList())).toString());
  }
}
